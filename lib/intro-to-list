void main() {
  
  IntroToList question = IntroToList();
  
  print(question.questions.length); // 4
  
  print(question.questions.reversed);
  
  /**
   * (The synonym of scorn is despise., 
   * The sound a Frog makes is known as croak., 
   * A young horse is called a duckling., 
   * 640 acres equal 1 square mile.)* 
   * 
   * */
  
  print(question.questions.firstWhere((i) => i.length > 1)); 
  // 640 acres equal 1 square mile.
  
  print(question.questions.first);
  // 640 acres equal 1 square mile.
  
  print(question.questions.every((element) => element.startsWith('a')));
  // false
  // because every element does not start with letter 'a'
  
  
  
  question.checkAnswer(1); 
  // Corerct Answer was: A young horse = a duckling.  
  question.checkAnswer(3); 
  // The synonym of scorn is despise.
  
  for (final q in question.questions) {
    print(q);
  }
  
  /**
   * 640 acres equal 1 square mile.
A young horse is called a duckling.
The sound a Frog makes is known as croak.
The synonym of scorn is despise.
   * 
   * 
   *  */
  
}

class IntroToList {
  
  List<String> questions = [
    '640 acres equal 1 square mile.',
    'A young horse is called a duckling.',
    'The sound a Frog makes is known as croak.',
    'The synonym of scorn is despise.',
  ];

  int questionIndex = 0;

  List<bool> answers = [
    true,
    false,
    true,
    true,
  ];

  String check = '';

  void checkAnswer(int questionIndex) {
    
    if (questionIndex == 0) {
      check = '';
    } else if (questionIndex == 1) {
      check = questions[questionIndex];
    } else if (questionIndex == 2) {
      check = questions[questionIndex];
    } else if (questionIndex == 3) {
      check = questions[questionIndex];
    } else if (questionIndex > 3) {
      check = questions[questionIndex];
    }
    
    print(check);
  }
  
  
  
  
}
